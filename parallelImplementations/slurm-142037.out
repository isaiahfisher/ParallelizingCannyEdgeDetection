Detecting lines with a sigma value of: 1.200000s
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Using 8 threads!
Elapsed time for our OpenMP implementation: 32.4537s
Testing on 50 4k images.
Detecting lines with a sigma value of: 1.200000s
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Using 16 threads!
Elapsed time for our OpenMP implementation: 31.9469s
Testing on 50 4k images.
Detecting lines with a sigma value of: 1.200000s
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Using 32 threads!
Elapsed time for our OpenMP implementation: 34.1169s
Testing on 50 4k images.
